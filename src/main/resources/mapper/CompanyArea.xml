<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rs.dao.ICompanyAreaDao">

	<sql id="codeColumns">
   		<![CDATA[
   			company_area_code=#{company_area_code}
   		]]>
	</sql>
	
	<insert id="save" parameterType="CompanyArea">
		<![CDATA[
   			insert into ts_company_area (company_area_code,company_area_name,company_code,company_name,user_name_add,user_code_add) 
   			values(#{company_area_code},#{company_area_name},#{company_code},#{company_name},#{user_name_add},#{user_code_add})
   		]]>
	</insert>
	
	<update id="update" parameterType="CompanyArea">
		<![CDATA[
			update ts_company_area
		]]>
		<set>
			<if test="company_area_name != null and company_area_name != ''">
				<![CDATA[
					company_area_name=#{company_area_name},
				]]>
			</if>
			<if test="company_code != null and company_code != ''">
				<![CDATA[
					company_code=#{company_code},
				]]>
			</if>
			<if test="company_name != null and company_name != ''">
				<![CDATA[
					company_name=#{company_name},
				]]>
			</if>
			<if test="state != null and state != ''">
				<![CDATA[
					state=#{state},
				]]>
			</if>
			<if test="user_code_update != null and user_code_update != ''">
				<![CDATA[
					user_code_update=#{user_code_update},
				]]>
			</if>
			<if test="user_name_update != null and user_name_update != ''">
				<![CDATA[
					user_name_update=#{user_name_update},
				]]>
			</if>
		</set>
		<where>
			<include refid="codeColumns"/>
		</where>
	</update>
	
	<delete id="delete" parameterType="CompanyArea">
		<![CDATA[
			delete from ts_company_area
		]]>		
		<where>
			<include refid="codeColumns"/>
		</where>
	</delete>
	
		
	<sql id="whereColumns">		
		<if test="company_code != null and company_code != ''">
			<![CDATA[
				and company_code = #{company_code}
			]]>
		</if>		
		<if test="state != null and state != ''">
			<![CDATA[
				and state = #{state}
			]]>
		</if>
		<if test="company_area_name != null and company_area_name != ''">
			<![CDATA[
				and (
						company_area_name like concat('%',#{company_area_name},'%')
				 	or  company_name like concat('%',#{company_area_name},'%')
				)
			]]>
		</if>
	</sql>
	
	<select id="findByList_app" parameterType="CompanyArea" resultType="CompanyAreaReturn">
		<![CDATA[
			select * from ts_company_area
		]]>
		<trim prefix="where" prefixOverrides="and|or">
			  <include refid="whereColumns"/>
		</trim>
		<![CDATA[
			order by add_time desc limit ${pager_offset},${pager_openset}
		]]>
	</select>
	
	<select id="findByCount" parameterType="CompanyArea" resultType="Integer">
		<![CDATA[
			select count(1) from ts_company_area
		]]>
		<trim prefix="where" prefixOverrides="and|or">
			  <include refid="whereColumns"/>
		</trim>
	</select>
	
	<select id="findByCode_app" parameterType="CompanyArea" resultType="CompanyAreaReturn">
		<![CDATA[
		 	select * from ts_company_area
		]]>
		<where>
			<include refid="codeColumns"/>
		</where>
	</select>
	
	<select id="findByAll" parameterType="CompanyArea" resultType="CompanyArea">
		<![CDATA[
		 	select * from ts_company_area
		]]>
		<trim prefix="where" prefixOverrides="and|or">
			  <include refid="whereColumns"/>
		</trim>
	</select>
	
	<select id="findByExist" parameterType="CompanyArea" resultType="Integer">
		<![CDATA[
			select count(1) from ts_company_area
		]]>	
		<trim prefix="where" prefixOverrides="and|or">
			<if test="company_area_name != null and company_area_name != ''">
				<![CDATA[
					and company_area_name=#{company_area_name}
				]]>
				<if test="company_area_code!=null and company_area_code!=''">
					<![CDATA[
					 and company_area_code<>#{company_area_code}
					]]>
				</if>
			</if>
			<if test="company_code !=null and company_code !=''">
				<![CDATA[
				 and company_code=#{company_code}
				]]>
			</if>
		</trim>
	</select>
	
	<update id="updateStatus" parameterType="CompanyArea">
		<![CDATA[
			update ts_company_area set state = #{state} where company_area_code = #{company_area_code}
		]]>
	</update>
	
</mapper>
