server.port=8888
server.max-http-header-size=204800
server.servlet.context-path=/three-small

####mysql配置>
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://cd-cdb-1yx7x8ee.sql.tencentcdb.com:62927/qydb?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC&&allowMultiQueries=true
spring.datasource.username=root
spring.datasource.password=rsroot123

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

spring.datasource.initial-size=3
spring.datasource.max-active=3
spring.datasource.max-idle=1
spring.datasource.max-wait=60000
spring.datasource.remove-abandoned=true
spring.datasource.remove-abandoned-timeout=180
spring.datasource.time-between-eviction-runs-millis=60000
spring.datasource.validation-query=select 1
spring.datasource.test-while-idle=true
spring.datasource.test-on-borrow=false
spring.datasource.test-on-return=false
spring.datasource.pool-prepared-statements=true
spring.datasource.max-pool-prepared-statement-per-connection-size=3
spring.datasource.filters=stat,wall,slf4j

####日志输出级别
logging.level.com.rs.dao=debug

####mybatis扫描包
mybatis.type-aliases-package=com.rs.po
mybatis.mapper-locations=classpath:mapper/*.xml


####redis配置
# Redis数据库索引（默认为0）  
spring.redis.database=0  
# Redis服务器地址  
spring.redis.host=45.40.242.23
# Redis服务器连接端口  
spring.redis.port=6379  
# Redis服务器连接密码（默认为空）  
spring.redis.password=sven!@#123
# 连接池最大连接数（使用负值表示没有限制）  
spring.redis.jedis.pool.max-active=200  
# 连接池最大阻塞等待时间（使用负值表示没有限制）  
spring.redis.jedis.pool.max-wait=-1ms
# 连接池中的最大空闲连接  
spring.redis.jedis.pool.max-idle=10 
# 连接池中的最小空闲连接  
spring.redis.jedis.pool.min-idle=0  
# 连接超时时间（毫秒）  
spring.redis.timeout=10000ms

####rabbitmq配置####
spring.application.name=springboot-rabbitmq
spring.rabbitmq.host=45.40.242.23
#15672是Web管理界面的端口；5672是MQ访问的端口
spring.rabbitmq.port=5672
spring.rabbitmq.username=sven
spring.rabbitmq.password=sven
# 通过实现 ConfirmCallback 接口，消息发送到 Broker 后触发回调，确认消息是否到达 Broker 服务器，也就是只确认是否正确到达 Exchange 中
spring.rabbitmq.publisher-confirms=true
# 到达exchange后无法路由到queue callBack
spring.rabbitmq.publisher-returns=true
# 必须设置为true，否则也无法 callBack
spring.rabbitmq.template.mandatory=true
# 消费消息手动删除
spring.rabbitmq.listener.simple.acknowledge-mode=manual
spring.rabbitmq.virtual-host=/

####JWT####
token.login_user = login_user_key
token.encry_key = sven
token.second_timeout = 1000

####token####
system.token_enable = false

######baidu#########
baidu.baidu_url = https://api.map.baidu.com/
baidu.baidu_uri = location/ip?
baidu.baidu_ak = oqnvdL14rNlcc5gi520BAbRZlW57T4NI

####log####
logging.file=sven.log
logging.level.root=INFO

#####app_key,app_secret######
sign.app_key = 5815e8a8-5bcd-d0b7-f61a-b4b331335276
sign.app_secret = 35faaf6a63d93cea7246e6854fceb2b2

####file####
fileupload.file_url = /opt/tools/apache-tomcat-8.5.20/webapps/qy/resources/
fileupload.file_ip = http://139.155.11.121:8089/qy/
fileupload.file_dir = resources
fileupload.file_common = common

#####bos#######
bos.bos_url = http://bos.esunadv.com:5050/api/v1/
bos.bos_video_uri = getVideoUrl
bos.bos_capture_pic = getCapturePic
bos.bos_review_pics = getReviewPics

#######url########
navigation.qyurl = http://139.155.11.121:8089/qy/

#######短信模板########
is_test = true
rest_server = open.ucpaas.com

#######下载限制时间（s）########
report.down_time = 600

#######微信公众号配置########
wx.appid = wx54e6d3f80c2b7173
wx.secret = 4f44eefbbd38e25934629d6d29cdd04d


####MQ队列、交换机、路由键后缀
mq.mq_prefix = test
mq.sensor_queue = sensor_queue
mq.sensor_routing_key = sensor_routing_key
mq.sensor_exchange = sensor_exchange

mq.sensor_log_queue = sensor_log_queue
mq.sensor_log_routing_key = sensor_log_routing_key
mq.sensor_log_exchange = sensor_log_exchange